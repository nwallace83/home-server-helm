apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      volumes:
        - name: {{ printf "%s-config-volume" .Release.Name }}
          configMap:
            name: {{ printf "%s-config-volume" .Release.Name }}
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: tls-root-secret
          secret:
            secretName: {{ printf "%s-tls-secret"  .Values.ingress.host }}
        - name: tls-www-secret
          secret:
            secretName: {{ printf "www.%s-tls-secret"  .Values.ingress.host }}
      containers:
        - name: {{ .Release.Name }}
          image: {{ .Values.image }}
          ports:
            - containerPort: 80
              protocol: TCP
            - containerPort: 443
              protocol: TCP
          volumeMounts:
            - name: {{ printf "%s-config-volume" .Release.Name }}
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: tls-root-secret
              mountPath: /etc/ssl/root
            - name: tls-www-secret
              mountPath: /etc/ssl/www
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 100%
  revisionHistoryLimit: 0