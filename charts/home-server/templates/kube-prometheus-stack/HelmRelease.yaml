apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 10m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: '*'
      sourceRef:
        kind: HelmRepository
        name: kube-prometheus-stack
        namespace: monitoring
      interval: 10m
  values:
    prometheus:
      ingress:
        enabled: true
        annotations:
          "cert-manager.io/cluster-issuer": letsencrypt-prod
        hosts:
        - prometheus.nwallace.io
        tls:
          - hosts:
            - prometheus.nwallace.io
            secretName: prometheus-nwallace.io-tls-secret
      prometheusSpec:
        image:
          regitry: harbor.nwallace.io/quay
        nodeSelector:
          kubernetes.io/arch: amd64  
        resources:
          requests:
            memory: 512Mi
          limits:
            memory: 2048Mi
        storageSpec: 
          volumeClaimTemplate:
            spec:
              storageClassName: 'longhorn'
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 30Gi
        serviceMonitorSelectorNilUsesHelmValues: false
        scrapeConfigSelector:
          matchLabels: null
        retention: 7d
        prometheusOperator:
      image:
        registry: harbor.nwallace.io/quay
      admissionWebhooks:
        deployment:
          image:
            registry: harbor.nwallace.io/quay
        patch:
          image:
            registry: harbor.nwallace.io/k8s
      prometheusConfigReloader:
        image:
          registry: harbor.nwallace.io/quay
      thanosImage:
        registry: harbor.nwallace.io/quay
    thanosRuler:
      thanosRulerSpec:
        image:
          registry: harbor.nwallace.io/quay
    alertmanager:
      alertmanagerSpec:
        image:
          registry: harbor.nwallace.io/quay
        storage:
          volumeClaimTemplate:
            metadata:
              name: prometheus-kube-alert-manager
            spec:
              storageClassName: 'longhorn'
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 100Mi
    grafana:
      persistence:
        enabled: true
        storageClassName: longhorn
        size: 1Gi
      ingress:
        enabled: true
        annotations:
          "cert-manager.io/cluster-issuer": letsencrypt-prod
        hosts:
        - grafana.nwallace.io
        tls:
          - hosts:
            - grafana.nwallace.io
            secretName: grafana-nwallace.io-tls-secret