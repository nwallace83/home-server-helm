{{- with .Values.applications.htmlExternal }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .appName }}
spec:
  replicas: {{ .replicas }}
  selector:
    matchLabels:
      app: {{ .appName }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .appName }}
    spec:
      volumes:
        - name: {{ .appName }}-config-volume
          configMap:
            name: {{ .appName }}-config-volume
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: tls-root-secret
          secret:
            secretName: {{ $.Values.domain }}-tls-secret
        - name: tls-www-secret
          secret:
            secretName: www.{{ $.Values.domain }}-tls-secret
      containers:
        - name: {{ .appName }}
          image: nginx:latest
          ports:
            - containerPort: 80
              protocol: TCP
            - containerPort: 443
              protocol: TCP
          volumeMounts:
            - name: {{ .appName }}-config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: tls-root-secret
              mountPath: /etc/ssl/root
            - name: tls-www-secret
              mountPath: /etc/ssl/www
          livenessProbe:
            httpGet:
              path: /
              port: 443
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 443
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          imagePullPolicy: Always
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 100%
  revisionHistoryLimit: 0
{{- end }}