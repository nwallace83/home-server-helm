{{- $appName := "pihole" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $appName }}
spec:
  replicas: {{ .Values.pihole.replicas }}
  selector:
    matchLabels:
      app: {{ $appName }}
  template:
    metadata:
      labels:
        app: {{ $appName }}
    spec:
      volumes:
        - name: custom-list
          configMap:
            name: {{ print $appName "-custom-list" }}
            items:
              - key: custom.list
                path: custom.list
            defaultMode: 420
        - name: {{ print $appName "-poststart-script" }}
          configMap:
            name: {{ print $appName "-poststart-script" }}
            items:
              - key: poststart.sh
                path: poststart.sh
        - name: etc-pihole
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
        - name: etc-dnsmasq-d
          emptyDir:
            medium: Memory
            sizeLimit: 512Mi
      containers:
        - name: {{ $appName }}
          image: pihole/pihole:latest
          ports:
            - containerPort: 80
              protocol: TCP
            - containerPort: 53
              protocol: TCP
            - containerPort: 53
              protocol: UDP
          envFrom:
            - configMapRef:
                name: {{ print $appName "-env" }}
          volumeMounts:
            - name: etc-pihole
              mountPath: /etc/pihole
            - name: etc-dnsmasq-d
              mountPath: /etc/dnsmasq.d
            - name: custom-list
              mountPath: /etc/pihole/custom.list
              subPath: custom.list
            - name: {{ print $appName "-poststart-script" }}
              mountPath: /tmp/poststart.sh
              subPath: poststart.sh
          livenessProbe:
            httpGet:
              path: /admin
              port: 80
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 12
          readinessProbe:
            httpGet:
              path: /admin
              port: 80
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 12
          lifecycle:
            postStart:
              exec:
                command:
                  - sh
                  - -c
                  - 'nohup sh /tmp/poststart.sh > /proc/1/fd/1 2>&1 &'
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 100%
  revisionHistoryLimit: 0