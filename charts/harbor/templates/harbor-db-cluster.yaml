apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: {{ .Release.Name }}
  namespace: harbor
spec:
  resources:
    limits:
        memory: "500Mi"
  instances: 3
  switchoverDelay: 60
  smartShutdownTimeout: 120
  stopDelay: 60
  primaryUpdateStrategy: unsupervised
  primaryUpdateMethod: switchover
  affinity:
    podAntiAffinityType: required
  env:
  - name: TZ
    value: America/Denver
  imageName: {{ .Values.dbImage }}
  bootstrap:
    # initdb:
    #   database: registry
    #   owner: harbor
    #   secret:
    #     name: harbor-postgresql-password
    recovery:
      source: {{ .Release.Name }}-old
      database: harbor
      owner: harbor
      secret:
        name: {{ .Release.Name }}-postgresql-password
  managed:
    roles:
    - name: harbor
      ensure: present
      login: true
      passwordSecret:
        name: {{ .Release.Name }}-postgresql-password
  storage:
    pvcTemplate:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 4Gi
      storageClassName: longhorn-db
      volumeMode: Filesystem
  walStorage:
    pvcTemplate:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
      storageClassName: longhorn-db
      volumeMode: Filesystem
  backup:
    retentionPolicy: "7d"
    barmanObjectStore:
      destinationPath: {{ printf "s3://%s-database/2024-07-20" .Release.Name }}
      endpointURL: http://minio.minio:9000
      data:
        compression: gzip
      wal:
        compression: gzip
      s3Credentials:
        accessKeyId:
          name: {{ .Release.Name }}-postgresql-minio
          key: AccessKey
        secretAccessKey:
          name: {{ .Release.Name }}-postgresql-minio
          key: SecretKey
  externalClusters:
    - name: {{ .Release.Name }}-old
      barmanObjectStore:
        destinationPath: {{ printf "s3://%s-database/2024-07-20" .Release.Name }}
        endpointURL: http://minio.minio:9000
        wal:
          maxParallel: 8
        s3Credentials:
          accessKeyId:
            name: {{ .Release.Name }}-postgresql-minio
            key: AccessKey
          secretAccessKey:
            name: {{ .Release.Name }}-postgresql-minio
            key: SecretKey
  monitoring:
    enablePodMonitor: true