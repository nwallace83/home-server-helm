apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  labels:
    {{- include "commonLabels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  serviceName: {{ .Release.Name }}
  replicas: 1
  minReadySeconds: 10
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: rclone
          image: {{ .Values.image }}
          command: ["sh", "-c", "/rclone/start.sh"]
          ports:
            - containerPort: 8989
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ printf "%s-env" .Release.Name }}
          volumeMounts:
            {{- if .Values.volumeMounts }}
              {{- toYaml .Values.volumeMounts | nindent 12 }}
            {{- end }}
            - name: config
              mountPath: /rclone
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
      volumes:
      {{- if .Values.volumes }}
        {{- toYaml .Values.volumes | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: config
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: {{ .Values.pvc.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.pvc.size }}