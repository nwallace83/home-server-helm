imagePullPolicy: IfNotPresent
timezone: America/Denver
mcImage: harbor.nwallace.io/docker-hub/minio/mc:RELEASE.2024-11-05T11-29-45Z # {"$imagepolicy": "vault:mc"}
vaultImage: harbor.nwallace.io/docker-hub/hashicorp/vault:1.18 # {"$imagepolicy": "vault:vault"}

vault:
  server:
    extraVolumes:
      - type: secret
        name: vault-tls-secret
    readinessProbe:
      enabled: true
      path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
    livenessProbe:
      enabled: true
      path: "/v1/sys/health?standbyok=true"
      initialDelaySeconds: 60
    extraEnvironmentVars:
      VAULT_CACERT: /vault/userconfig/vault-tls-secret/ca.crt
    extraSecretEnvironmentVars:
      - envName: AWS_ACCESS_KEY_ID
        secretName: vault-unseal-credentials
        secretKey: AWS_ACCESS_KEY_ID
      - envName: AWS_SECRET_ACCESS_KEY
        secretName: vault-unseal-credentials
        secretKey: AWS_SECRET_ACCESS_KEY
      - envName: VAULT_AWSKMS_SEAL_KEY_ID
        secretName: vault-unseal-credentials
        secretKey: VAULT_AWSKMS_SEAL_KEY_ID
    dataStorage:
      storageClass: longhorn-general
      size: 200Mi
    ingress:
      enabled: true
      hosts:
        - host: vault.nwallace.io
      ingressClassName: nginx
      tls:
        - hosts:
            - vault.nwallace.io
          secretName: vault.nwallace.io-tls-secret
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/ssl-redirect: 'true'
        nginx.ingress.kubernetes.io/use-regex: 'true'
    ha:
      enabled: true
      replicas: 3
      raft:
        enabled: true
        setNodeId: true
        config: |
          ui = true
          cluster_name = "vault-integrated-storage"
          listener "tcp" {
            tls_disable = 0
            address = "[::]:8200"
            cluster_address = "[::]:8201"
            tls_cert_file = "/vault/userconfig/vault-tls-secret/tls.crt"
            tls_key_file = "/vault/userconfig/vault-tls-secret/tls.key"
          }
          storage "raft" {
            path = "/vault/data"
            retry_join {
              leader_api_addr = "https://vault-0.vault-internal:8200"
              leader_ca_cert_file = "/vault/userconfig/vault-tls-secret/ca.crt"
              leader_client_cert_file = "/vault/userconfig/vault-tls-secret/tls.crt"
              leader_client_key_file = "/vault/userconfig/vault-tls-secret/tls.key"
            }
            retry_join {
              leader_api_addr = "https://vault-1.vault-internal:8200"
              leader_ca_cert_file = "/vault/userconfig/vault-tls-secret/ca.crt"
              leader_client_cert_file = "/vault/userconfig/vault-tls-secret/tls.crt"
              leader_client_key_file = "/vault/userconfig/vault-tls-secret/tls.key"
            }
            retry_join {
              leader_api_addr = "https://vault-2.vault-internal:8200"
              leader_ca_cert_file = "/vault/userconfig/vault-tls-secret/ca.crt"
              leader_client_cert_file = "/vault/userconfig/vault-tls-secret/tls.crt"
              leader_client_key_file = "/vault/userconfig/vault-tls-secret/tls.key"
            }
            autopilot {
              server_stabilization_time = "30s"
              last_contact_threshold = "30s"
              min_quorum = 3
              cleanup_dead_servers = false
              dead_server_last_contact_threshold = "10m"
              max_trailing_logs = 1000
              disable_upgrade_migration = false
            }
          }
          service_registration "kubernetes" {}
          seal "awskms" { 
            region = "us-east-1" 
          }
    standalone:
      enabled: false
    image:
      repository: harbor.nwallace.io/docker-hub/hashicorp/vault
    updateStrategyType: RollingUpdate
  injector:
    enabled: false
  global:
    tlsDisable: false
  csi:
    agent:
      image:
        repository: harbor.nwallace.io/docker-hub/hashicorp/vault
    image:
      repository: harbor.nwallace.io/docker-hub/hashicorp/vault-csi-provider

vault-secrets-operator:
  controller:
    replicas: 1
    manager:
      image:
        repository: harbor.nwallace.io/docker-hub/hashicorp/vault-secrets-operator
    kubeRbacProxy:
      image:
        repository: harbor.nwallace.io/quay/brancz/kube-rbac-proxy
  defaultVaultConnection:
    address: https://vault.nwallace.io
    enabled: true
  defaultAuthMethod:
    enabled: true
    namespace: vault
    kubernetes:
      role: admin