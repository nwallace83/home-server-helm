apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    {{- include "commonLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        {{- include "commonLabels" . | nindent 8 }}
        app: {{ .Release.Name }}
      annotations:
        checksum/postStart: {{ include (print $.Template.BasePath "/config-map-poststart-script.yaml") . | sha256sum }}
        checksum/env: {{ include (print $.Template.BasePath "/config-map-env.yaml") . | sha256sum }}
    spec:
      volumes:
        - name: {{ printf "%s-poststart-script" .Release.Name }}
          configMap:
            name: {{ printf "%s-poststart-script" .Release.Name }}
            items:
              - key: poststart.sh
                path: poststart.sh
      containers:
        - name: {{ .Release.Name }}
          image: {{ .Values.image }}
          ports:
            - containerPort: 80
              protocol: TCP
            - containerPort: 53
              protocol: TCP
            - containerPort: 53
              protocol: UDP
          env:
          - name: FTLCONF_dns_hosts
            value: {{ .Values.dnsHosts }}
          - name: FTLCONF_dhcp_active
            value: 'false'
          - name: FTLCONF_webserver_api_password
            valueFrom:
              secretKeyRef: 
                name: {{ .Release.Name }}-env
                key: FTLCONF_webserver_api_password
          envFrom:
            - configMapRef:
                name: {{ printf "%s-env" .Release.Name }}
          volumeMounts:
            - name: {{ printf "%s-poststart-script" .Release.Name }}
              mountPath: /poststart.sh
              subPath: poststart.sh
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          lifecycle:
            postStart:
              exec:
                command:
                  - sh
                  - -c
                  - 'nohup sh /poststart.sh &>/proc/1/fd/1 &'
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 100%
  revisionHistoryLimit: 0